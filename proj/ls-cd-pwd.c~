#include "type.h"

SUPER *sp;
GD    *gp;
INODE *ip, *mip;

int ls_file(int ino){
  mip = iget(dev, ino);

  printf("%d ",mip->i_mode);

}

int ls_dir(char *dirname){
  ino = getino(dirname);
  mip = iget(dev, ino);

  char lsbuf[BLKSIZE];
  get_block(dev, mip->i_block[0], lsbuf);

  cp = buf;
  dp = (DIR *)buf;

  while(cp < buf+1024){
    ls_file(dp->inode);

    cp += dp->rec_len;
    dp = (DIR *)cp;
  }
}

int parse_path(char *path, char **name){
  int nlen = 0;
  char * temp;
  temp = strtok(path, "/");
  name[nlen++]= temp2;
  printf("path = /");
  
  while(temp = strtok(0,"/")){//parses path into name array
    name[nlen++] = temp;
  }
  name[nlen+1] = "";
}

int list_file(char *path){
  char *name[256];
  parse_path(path, name);

  //make sure path exists
  printf("Find path....\n");
  for(cur=0;cur<nlen;cur++){
    ino = search(ip,name[cur]);
    if(!ino){
      printf("Path not found at %s\n", name[cur]);
      exit(1);
    }
    ip = getInode(dev, ino);
    if ((ip->i_mode & 0xF000) != 0x4000){
      printf("ls failed: not a DIR\n");
      return -1;
    }
    printf("Found ino: %d\n", ino);
  }
  printf("OK\n");

  ls_file(ino);
  
  return 0;
}

int change_dir(char *path){

}

int rpwd(INODE *ip){

}

int pwd(INODE *ip){
  rpwd(
}
